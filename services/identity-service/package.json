{
	"name": "identity-service",
	"version": "0.1.0",
	"description": "Identity service for Portflow container booking platform",
	"author": "Marcus Berggren, berggren.me@gmail.com",
	"private": true,
	"license": "MIT",
	"scripts": {
		"build": "nest build",
		"format": "biome format --write .",
		"start": "nest start",
		"start:dev": "nest start --watch",
		"start:debug": "nest start --debug --watch",
		"start:prod": "node dist/main",
		"lint": "biome check .",
		"lint:fix": "biome check --write .",
		"test": "jest",
		"test:watch": "jest --watch",
		"test:cov": "jest --coverage",
		"test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
		"test:e2e": "jest --config ./test/jest-e2e.json"
	},
	"dependencies": {
		"@nestjs/common": "^11.0.1",
		"@nestjs/config": "^4.0.2",
		"@nestjs/core": "^11.0.1",
		"@nestjs/jwt": "^11.0.0",
		"@nestjs/microservices": "^11.1.6",
		"@nestjs/passport": "^11.0.5",
		"@nestjs/platform-express": "^11.0.1",
		"@portflow/shared-auth": "workspace:*",
		"@prisma/client": "^6.17.0",
		"bcrypt": "^6.0.0",
		"class-transformer": "^0.5.1",
		"class-validator": "^0.14.2",
		"joi": "^18.0.1",
		"nats": "^2.29.3",
		"passport": "^0.7.0",
		"passport-jwt": "^4.0.1",
		"passport-local": "^1.0.0",
		"reflect-metadata": "^0.2.2",
		"rxjs": "^7.8.1"
	},
	"devDependencies": {
		"@biomejs/biome": "^2.2.5",
		"@eslint/eslintrc": "^3.2.0",
		"@nestjs/cli": "^11.0.0",
		"@nestjs/schematics": "^11.0.0",
		"@nestjs/testing": "^11.0.1",
		"@types/bcrypt": "^6.0.0",
		"@types/express": "^5.0.0",
		"@types/jest": "^30.0.0",
		"@types/node": "^22.10.7",
		"@types/passport-local": "^1.0.38",
		"@types/supertest": "^6.0.2",
		"jest": "^30.0.0",
		"prisma": "^6.17.0",
		"source-map-support": "^0.5.21",
		"supertest": "^7.0.0",
		"ts-jest": "^29.2.5",
		"ts-loader": "^9.5.2",
		"ts-node": "^10.9.2",
		"tsconfig-paths": "^4.2.0",
		"typescript": "^5.7.3"
	},
	"jest": {
		"moduleFileExtensions": [
			"js",
			"json",
			"ts"
		],
		"rootDir": "src",
		"testRegex": ".*\\.spec\\.ts$",
		"transform": {
			"^.+\\.(t|j)s$": "ts-jest"
		},
		"collectCoverageFrom": [
			"**/*.(t|j)s"
		],
		"coverageDirectory": "../coverage",
		"testEnvironment": "node"
	},
	"prisma": {
		"seed": "ts-node prisma/seed.ts"
	}
}
